[pytest]
# If a pytest section is found in one of the possible config files
# (pytest.ini, tox.ini or setup.cfg), then pytest will not look for any others,
# so if you add a pytest config section elsewhere,
# you will need to delete this section from setup.cfg.
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    migrations
{% else %}
norecursedirs =
    migrations
{% endif %}
python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict-markers
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    --ignore=docs/conf.py
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
{%- endif %}
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short
{%- if cookiecutter.tests_inside_package == 'yes' %}
    --pyargs
# The order of these options matters. testpaths comes after addopts so that
# {{cookiecutter.package_name}} in testpaths is interpreted as
# --pyargs {{cookiecutter.package_name}}.
# Any tests in the src/ directory (that is, tests installed with the package)
# can be run by any user with pytest --pyargs {{cookiecutter.package_name}}.
testpaths =
    {{cookiecutter.package_name}}
{%- else %}
testpaths =
    tests
{%- endif %}
# If you want to switch back to tests outside package just remove --pyargs
# and edit testpaths to have "tests/" instead of "{{cookiecutter.package_name}}".

# Idea from: https://til.simonwillison.net/pytest/treat-warnings-as-errors
filterwarnings =
    error
# You can add exclusions, some examples:
#    ignore:'{{ cookiecutter.package_name }}' defines default_app_config:PendingDeprecationWarning::
#    ignore:The {{ '{{' }}% if:::
#    ignore:Coverage disabled via --no-cov switch!
